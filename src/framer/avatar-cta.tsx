// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project bee694db1d314f12 "Innermost AI (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
}} Props

 */
import { stdin_default } from "./chunks/chunk-2ZTV3BKG.js";
import { FramerIcons } from "./chunks/chunk-VRPEN3BZ.js";
import { Video } from "./chunks/chunk-G73PZF75.js";
import { routes } from "./chunks/chunk-VAWW4KIH.js";

// virtual:avatar-cta
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framer.com/m/avatar-cta-r3lG.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ComponentViewportProvider,
	ControlType,
	cx,
	getFonts,
	getLoadingLazyAtYPosition,
	Image,
	SmartComponentScopedContainer,
	useActiveVariantCallback,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var FramerIconsFonts = getFonts(FramerIcons);
var VideoFonts = getFonts(Video);
var CTAFonts = getFonts(stdin_default);
var cycleOrder = ["H7Jwp7KfW", "xsWcqnAXo", "H_1CEDjAh", "FjFgQCQuW"];
var serializationHash = "framer-sc91h";
var variantClassNames = {
	FjFgQCQuW: "framer-v-g2e86o",
	H_1CEDjAh: "framer-v-1jm30yb",
	H7Jwp7KfW: "framer-v-1gbhpm3",
	xsWcqnAXo: "framer-v-1eiw7il",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var toResponsiveImage = (value) => {
	if (
		typeof value === "object" &&
		value !== null &&
		typeof value.src === "string"
	) {
		return value;
	}
	return typeof value === "string"
		? {
				src: value,
			}
		: void 0;
};
var transition1 = {
	duration: 0,
	type: "tween",
};
var transformTemplate1 = (_, t) => `translate(-50%, -50%) ${t}`;
var transformTemplate2 = (_, t) => `translateX(-50%) ${t}`;
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	"phone video open": "FjFgQCQuW",
	"Variant 1": "H7Jwp7KfW",
	"Video open": "H_1CEDjAh",
	Phone: "xsWcqnAXo",
};
var getProps = ({ click, height, id, image, title, uRL, width, ...props }) => {
	return {
		...props,
		aYTSGOWBV: title ?? props.aYTSGOWBV ?? "Ed",
		H_LJwZnoR:
			uRL ??
			props.H_LJwZnoR ??
			"https://framerusercontent.com/assets/MLWPbW1dUQawJLhhun3dBwpgJak.mp4",
		KWiso9aG1: image ??
			props.KWiso9aG1 ?? {
				alt: "",
				pixelHeight: 1200,
				pixelWidth: 1200,
				src: "https://framerusercontent.com/images/cEh6TuCgJN4Ss0sUz3lAXzF436g.png?scale-down-to=512",
				srcSet:
					"https://framerusercontent.com/images/cEh6TuCgJN4Ss0sUz3lAXzF436g.png?scale-down-to=512 512w,https://framerusercontent.com/images/cEh6TuCgJN4Ss0sUz3lAXzF436g.png?scale-down-to=1024 1024w,https://framerusercontent.com/images/cEh6TuCgJN4Ss0sUz3lAXzF436g.png 1200w",
			},
		NhedjOGzh: click ?? props.NhedjOGzh,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "H7Jwp7KfW",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className,
		layoutId,
		variant,
		KWiso9aG1,
		aYTSGOWBV,
		H_LJwZnoR,
		NhedjOGzh,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "H7Jwp7KfW",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const { activeVariantCallback, delay } =
		useActiveVariantCallback(baseVariant);
	const onTaprfgsjj = activeVariantCallback(async (...args) => {
		setGestureState({
			isPressed: false,
		});
		if (NhedjOGzh) {
			const res = await NhedjOGzh(...args);
			if (res === false) return false;
		}
		setVariant("H_1CEDjAh");
	});
	const onTap1yygv44 = activeVariantCallback(async (...args) => {
		setGestureState({
			isPressed: false,
		});
		if (NhedjOGzh) {
			const res = await NhedjOGzh(...args);
			if (res === false) return false;
		}
		setVariant("FjFgQCQuW");
	});
	const onTapy0ple = activeVariantCallback(async (...args) => {
		setGestureState({
			isPressed: false,
		});
		if (NhedjOGzh) {
			const res = await NhedjOGzh(...args);
			if (res === false) return false;
		}
	});
	const onTap1ck8gxa = activeVariantCallback(async (...args) => {
		setVariant("H7Jwp7KfW");
	});
	const onTap1shhdnh = activeVariantCallback(async (...args) => {
		setVariant("xsWcqnAXo");
	});
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	const isDisplayed = () => {
		if (["H_1CEDjAh", "FjFgQCQuW"].includes(baseVariant)) return true;
		return false;
	};
	const isDisplayed1 = () => {
		if (["H_1CEDjAh", "FjFgQCQuW"].includes(baseVariant)) return false;
		return true;
	};
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<Image
						{...restProps}
						{...gestureHandlers}
						background={{
							alt: "",
							fit: "fill",
							loading: getLoadingLazyAtYPosition(componentViewport?.y || 0),
							sizes: componentViewport?.width || "100vw",
							...toResponsiveImage(KWiso9aG1),
						}}
						className={cx(
							scopingClassNames,
							"framer-1gbhpm3",
							className,
							classNames,
						)}
						data-framer-name={"Variant 1"}
						data-highlight={true}
						layoutDependency={layoutDependency}
						layoutId={"H7Jwp7KfW"}
						onTap={onTaprfgsjj}
						ref={refBinding}
						style={{
							backgroundColor: "rgba(0, 0, 0, 0)",
							borderBottomLeftRadius: 16,
							borderBottomRightRadius: 16,
							borderTopLeftRadius: 16,
							borderTopRightRadius: 16,
							...style,
						}}
						variants={{
							FjFgQCQuW: {
								backgroundColor: "rgb(134, 112, 85)",
								borderBottomLeftRadius: 12,
								borderBottomRightRadius: 12,
								borderTopLeftRadius: 12,
								borderTopRightRadius: 12,
							},
							H_1CEDjAh: {
								backgroundColor: "rgba(134, 112, 85, 0.5)",
							},
							xsWcqnAXo: {
								borderBottomLeftRadius: 12,
								borderBottomRightRadius: 12,
								borderTopLeftRadius: 12,
								borderTopRightRadius: 12,
							},
						}}
						{...addPropertyOverrides(
							{
								FjFgQCQuW: {
									"data-framer-name": "phone video open",
									background: void 0,
									onTap: onTapy0ple,
								},
								H_1CEDjAh: {
									"data-framer-name": "Video open",
									background: void 0,
									onTap: onTapy0ple,
								},
								xsWcqnAXo: {
									"data-framer-name": "Phone",
									onTap: onTap1yygv44,
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						{isDisplayed() && (
							<motion.div
								className={"framer-j3aw6b"}
								data-highlight={true}
								layoutDependency={layoutDependency}
								layoutId={"dfs5XcgY5"}
								onTap={onTap1ck8gxa}
								style={{
									backgroundColor: "rgba(0, 0, 0, 0.1)",
									borderBottomLeftRadius: 20,
									borderBottomRightRadius: 20,
									borderTopLeftRadius: 20,
									borderTopRightRadius: 20,
								}}
								{...addPropertyOverrides(
									{
										FjFgQCQuW: {
											onTap: onTap1shhdnh,
										},
									},
									baseVariant,
									gestureVariant,
								)}
							>
								{isDisplayed() && (
									<ComponentViewportProvider>
										<SmartComponentScopedContainer
											className={"framer-uqiz0p-container"}
											data-framer-name={"x"}
											isAuthoredByUser={true}
											isModuleExternal={true}
											layoutDependency={layoutDependency}
											layoutId={"THE3X_GWN-container"}
											name={"x"}
											nodeId={"THE3X_GWN"}
											rendersWithMotion={true}
											scopeId={"xhFsY4Hmc"}
											transformTemplate={transformTemplate1}
										>
											<FramerIcons
												color={
													"var(--token-f087042b-d073-4748-a812-d40ebb0748d1, rgb(255, 255, 255))"
												}
												height={"100%"}
												id={"THE3X_GWN"}
												layoutId={"THE3X_GWN"}
												name={"x"}
												strokeWidth={1.5}
												style={{
													height: "100%",
													width: "100%",
												}}
												svg={
													'<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" fill="#000000" class="bi bi-x" viewBox="0 0 16 16">\n  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>\n</svg>'
												}
												width={"100%"}
											/>
										</SmartComponentScopedContainer>
									</ComponentViewportProvider>
								)}
							</motion.div>
						)}
						{isDisplayed() && (
							<ComponentViewportProvider>
								<SmartComponentScopedContainer
									className={"framer-1upyupl-container"}
									isAuthoredByUser={true}
									isModuleExternal={true}
									layoutDependency={layoutDependency}
									layoutId={"XCVQYdjMc-container"}
									nodeId={"XCVQYdjMc"}
									rendersWithMotion={true}
									scopeId={"xhFsY4Hmc"}
									style={{
										opacity: 0,
									}}
									variants={{
										FjFgQCQuW: {
											opacity: 1,
										},
										H_1CEDjAh: {
											opacity: 1,
										},
									}}
								>
									<Video
										backgroundColor={"rgba(0, 0, 0, 0)"}
										borderRadius={16}
										bottomLeftRadius={16}
										bottomRightRadius={16}
										controls={false}
										height={"100%"}
										id={"XCVQYdjMc"}
										isMixedBorderRadius={false}
										layoutId={"XCVQYdjMc"}
										loop={true}
										muted={false}
										objectFit={"cover"}
										playing={true}
										posterEnabled={true}
										srcType={"URL"}
										srcUrl={H_LJwZnoR}
										startTime={0}
										style={{
											height: "100%",
											width: "100%",
										}}
										topLeftRadius={16}
										topRightRadius={16}
										volume={25}
										width={"100%"}
										{...addPropertyOverrides(
											{
												FjFgQCQuW: {
													borderRadius: 12,
													bottomLeftRadius: 12,
													bottomRightRadius: 12,
													topLeftRadius: 12,
													topRightRadius: 12,
												},
												H_1CEDjAh: {
													backgroundColor: "rgba(0, 0, 0, 0.2)",
													loop: false,
												},
											},
											baseVariant,
											gestureVariant,
										)}
									/>
								</SmartComponentScopedContainer>
							</ComponentViewportProvider>
						)}
						{isDisplayed1() && (
							<ComponentViewportProvider
								height={32}
								y={
									(componentViewport?.y || 0) +
									(componentViewport?.height || 300) -
									56
								}
								{...addPropertyOverrides(
									{
										xsWcqnAXo: {
											y:
												(componentViewport?.y || 0) +
												(componentViewport?.height || 260) -
												56,
										},
									},
									baseVariant,
									gestureVariant,
								)}
							>
								<SmartComponentScopedContainer
									className={"framer-1lbozp2-container"}
									layoutDependency={layoutDependency}
									layoutId={"GV71fOGAO-container"}
									nodeId={"GV71fOGAO"}
									rendersWithMotion={true}
									scopeId={"xhFsY4Hmc"}
									transformTemplate={transformTemplate2}
								>
									{_jsx(stdin_default, {
										height: "100%",
										id: "GV71fOGAO",
										layoutId: "GV71fOGAO",
										nlmuvNmBV: aYTSGOWBV,
										width: "100%",
									})}
								</SmartComponentScopedContainer>
							</ComponentViewportProvider>
						)}
					</Image>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-sc91h.framer-2x8ieo, .framer-sc91h .framer-2x8ieo { display: block; }",
	".framer-sc91h.framer-1gbhpm3 { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 300px; justify-content: flex-end; overflow: visible; padding: 0px; position: relative; width: 300px; }",
	".framer-sc91h .framer-j3aw6b { cursor: pointer; flex: none; height: 32px; overflow: visible; position: absolute; right: 0px; top: 0px; width: 32px; z-index: 10; }",
	".framer-sc91h .framer-uqiz0p-container { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 16px); left: 50%; position: absolute; top: 50%; width: 16px; }",
	".framer-sc91h .framer-1upyupl-container { flex: none; height: 100%; position: relative; width: 100%; }",
	".framer-sc91h .framer-1lbozp2-container { bottom: 24px; flex: none; height: auto; left: 50%; position: absolute; width: auto; z-index: 2; }",
	".framer-sc91h.framer-v-1eiw7il.framer-1gbhpm3, .framer-sc91h.framer-v-g2e86o.framer-1gbhpm3 { aspect-ratio: 1 / 1; height: var(--framer-aspect-ratio-supported, 260px); width: 260px; }",
	".framer-sc91h.framer-v-1jm30yb.framer-1gbhpm3 { aspect-ratio: 1 / 1; height: var(--framer-aspect-ratio-supported, 300px); }",
];
var FramerxhFsY4Hmc = withCSS(Component, css, "framer-sc91h");
var stdin_default2 = FramerxhFsY4Hmc;
FramerxhFsY4Hmc.displayName = "avatar+cta";
FramerxhFsY4Hmc.defaultProps = {
	height: 300,
	width: 300,
};
addPropertyControls(FramerxhFsY4Hmc, {
	variant: {
		options: ["H7Jwp7KfW", "xsWcqnAXo", "H_1CEDjAh", "FjFgQCQuW"],
		optionTitles: ["Variant 1", "Phone", "Video open", "phone video open"],
		title: "Variant",
		type: ControlType.Enum,
	},
	KWiso9aG1: {
		__defaultAssetReference:
			"data:framer/asset-reference,cEh6TuCgJN4Ss0sUz3lAXzF436g.png?originalFilename=avatar%2Bcta.png&preferredSize=auto",
		__vekterDefault: {
			alt: "",
			assetReference:
				"data:framer/asset-reference,cEh6TuCgJN4Ss0sUz3lAXzF436g.png?originalFilename=avatar%2Bcta.png&preferredSize=auto",
		},
		title: "Image",
		type: ControlType.ResponsiveImage,
	},
	aYTSGOWBV: {
		defaultValue: "Ed",
		displayTextArea: false,
		title: "Title",
		type: ControlType.String,
	},
	H_LJwZnoR: {
		defaultValue:
			"https://framerusercontent.com/assets/MLWPbW1dUQawJLhhun3dBwpgJak.mp4",
		title: "URL",
		type: ControlType.String,
	},
	NhedjOGzh: {
		title: "Click",
		type: ControlType.EventHandler,
	},
});
addFonts(
	FramerxhFsY4Hmc,
	[
		{
			explicitInter: true,
			fonts: [],
		},
		...FramerIconsFonts,
		...VideoFonts,
		...CTAFonts,
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:avatar-cta
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "H7Jwp7KfW",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"bee694db1d314f12b6cdffa60a360ffca3c14f0f2418539a656750f9a51be314"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default2, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders AvatarCtaFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"bee694db1d314f12b6cdffa60a360ffca3c14f0f2418539a656750f9a51be314"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default2}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default2);
var avatar_cta_default = ComponentWithRoot;
export { avatar_cta_default as default };
