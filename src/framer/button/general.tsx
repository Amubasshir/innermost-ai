// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project bee694db1d314f12 "Innermost AI (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
}} Props

 */
import { Icon } from "../chunks/chunk-TDPQQHTE.js";
import { routes } from "../chunks/chunk-VAWW4KIH.js";

// virtual:button/general
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framer.com/m/Button-General-kpsC.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ComponentViewportProvider,
	ControlType,
	cx,
	getFonts,
	Link,
	RichText,
	SmartComponentScopedContainer,
	useActiveVariantCallback,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var FeatherFonts = getFonts(Icon);
var enabledGestures = {
	eHqoyvrbU: {
		hover: true,
	},
	iGf3xscni: {
		hover: true,
	},
	IQofJ85ap: {
		hover: true,
	},
	jWZK7WjcD: {
		hover: true,
	},
	mEupMeY4u: {
		hover: true,
	},
	OVgPuO5XY: {
		hover: true,
	},
	XvgVdrDw_: {
		hover: true,
	},
};
var cycleOrder = [
	"mEupMeY4u",
	"OVgPuO5XY",
	"eHqoyvrbU",
	"jWZK7WjcD",
	"IQofJ85ap",
	"iGf3xscni",
	"XvgVdrDw_",
];
var serializationHash = "framer-LQx4F";
var variantClassNames = {
	eHqoyvrbU: "framer-v-2123ru",
	iGf3xscni: "framer-v-18bfqtp",
	IQofJ85ap: "framer-v-1fn8aeb",
	jWZK7WjcD: "framer-v-q2ap3c",
	mEupMeY4u: "framer-v-cq2f4d",
	OVgPuO5XY: "framer-v-123r710",
	XvgVdrDw_: "framer-v-ywmhu9",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	damping: 60,
	delay: 0,
	mass: 1,
	stiffness: 500,
	type: "spring",
};
var numberToPixelString = (value) => {
	if (typeof value !== "number") return value;
	if (!Number.isFinite(value)) return void 0;
	return Math.max(0, value) + "px";
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	"20px dark": "XvgVdrDw_",
	"20px": "iGf3xscni",
	"Primary Outline Icon": "eHqoyvrbU",
	"Primary Outline": "jWZK7WjcD",
	"Secondary Icon": "IQofJ85ap",
	Primary: "mEupMeY4u",
	Secondary: "OVgPuO5XY",
};
var getProps = ({
	buttonLabel,
	click,
	height,
	id,
	link,
	padding,
	width,
	...props
}) => {
	return {
		...props,
		c3NOAKqXS: link ?? props.c3NOAKqXS,
		gCmmKaF_0: buttonLabel ?? props.gCmmKaF_0 ?? "button",
		mfMdui7qz: click ?? props.mfMdui7qz,
		SOlgGv_mR: padding ?? props.SOlgGv_mR ?? "14px 32px 14px 32px",
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "mEupMeY4u",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className,
		layoutId,
		variant,
		gCmmKaF_0,
		c3NOAKqXS,
		SOlgGv_mR,
		mfMdui7qz,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "mEupMeY4u",
		enabledGestures,
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const { activeVariantCallback, delay } =
		useActiveVariantCallback(baseVariant);
	const onTapjirt76 = activeVariantCallback(async (...args) => {
		setGestureState({
			isPressed: false,
		});
		if (mfMdui7qz) {
			const res = await mfMdui7qz(...args);
			if (res === false) return false;
		}
	});
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	const isDisplayed = () => {
		if (["OVgPuO5XY-hover", "eHqoyvrbU-hover"].includes(gestureVariant))
			return true;
		if (["OVgPuO5XY", "eHqoyvrbU"].includes(baseVariant)) return true;
		return false;
	};
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<Link
						href={c3NOAKqXS}
						motionChild={true}
						nodeId={"mEupMeY4u"}
						openInNewTab={false}
						scopeId={"lXVHp5pp8"}
						smoothScroll={true}
					>
						<motion.a
							{...restProps}
							{...gestureHandlers}
							className={`${cx(scopingClassNames, "framer-cq2f4d", className, classNames)} framer-1j9swxg`}
							data-framer-name={"Primary"}
							data-highlight={true}
							data-reset={"button"}
							layoutDependency={layoutDependency}
							layoutId={"mEupMeY4u"}
							onTap={onTapjirt76}
							ref={refBinding}
							style={{
								"--ouukmc": numberToPixelString(SOlgGv_mR),
								backgroundColor:
									"var(--token-b96ed00f-f1b0-47f1-85a2-09f5e52d4710, rgb(36, 36, 35))",
								borderBottomLeftRadius: 37,
								borderBottomRightRadius: 37,
								borderTopLeftRadius: 37,
								borderTopRightRadius: 37,
								boxShadow: "none",
								...style,
							}}
							variants={{
								"eHqoyvrbU-hover": {
									boxShadow: "none",
								},
								"iGf3xscni-hover": {
									backgroundColor: "rgb(217, 100, 17)",
									boxShadow: "none",
								},
								"IQofJ85ap-hover": {
									backgroundColor: "rgb(217, 100, 17)",
									boxShadow: "none",
								},
								"jWZK7WjcD-hover": {
									boxShadow: "none",
								},
								"mEupMeY4u-hover": {
									backgroundColor: "rgb(64, 64, 64)",
									boxShadow: "none",
								},
								"OVgPuO5XY-hover": {
									backgroundColor: "rgb(255, 255, 255)",
									boxShadow:
										"0px 0px 9px 0px var(--token-64f5bd03-6b7a-43e3-ba7b-3a0b2b8b7a5e, rgb(242, 249, 254))",
								},
								"XvgVdrDw_-hover": {
									backgroundColor: "rgb(64, 64, 64)",
									boxShadow: "none",
								},
								eHqoyvrbU: {
									backgroundColor:
										"var(--token-466f412f-31e4-4f7f-a7e6-91a69b113f31, rgba(175, 209, 21, 0))",
								},
								iGf3xscni: {
									backgroundColor:
										"var(--token-a046c569-860e-4698-b73a-6f4a544ad189, rgb(249, 120, 28))",
								},
								IQofJ85ap: {
									backgroundColor:
										"var(--token-a046c569-860e-4698-b73a-6f4a544ad189, rgb(249, 120, 28))",
								},
								jWZK7WjcD: {
									backgroundColor:
										"var(--token-466f412f-31e4-4f7f-a7e6-91a69b113f31, rgba(175, 209, 21, 0))",
								},
								OVgPuO5XY: {
									backgroundColor:
										"var(--token-f087042b-d073-4748-a812-d40ebb0748d1, rgb(255, 255, 255))",
								},
							}}
							{...addPropertyOverrides(
								{
									"eHqoyvrbU-hover": {
										"data-framer-name": void 0,
									},
									"iGf3xscni-hover": {
										"data-framer-name": void 0,
									},
									"IQofJ85ap-hover": {
										"data-framer-name": void 0,
									},
									"jWZK7WjcD-hover": {
										"data-framer-name": void 0,
									},
									"mEupMeY4u-hover": {
										"data-framer-name": void 0,
									},
									"OVgPuO5XY-hover": {
										"data-framer-name": void 0,
									},
									"XvgVdrDw_-hover": {
										"data-framer-name": void 0,
									},
									eHqoyvrbU: {
										"data-framer-name": "Primary Outline Icon",
									},
									iGf3xscni: {
										"data-framer-name": "20px",
									},
									IQofJ85ap: {
										"data-framer-name": "Secondary Icon",
									},
									jWZK7WjcD: {
										"data-framer-name": "Primary Outline",
									},
									OVgPuO5XY: {
										"data-framer-name": "Secondary",
									},
									XvgVdrDw_: {
										"data-framer-name": "20px dark",
									},
								},
								baseVariant,
								gestureVariant,
							)}
						>
							<RichText
								__fromCanvasComponent={true}
								className={"framer-nvgmjc"}
								fonts={["FS;Poppins-medium"]}
								layoutDependency={layoutDependency}
								layoutId={"sc7bCnUo6"}
								style={{
									"--extracted-r6o4lv":
										"var(--token-f087042b-d073-4748-a812-d40ebb0748d1, rgb(255, 255, 255))",
									"--framer-link-text-color": "rgb(0, 153, 255)",
									"--framer-link-text-decoration": "underline",
								}}
								text={gCmmKaF_0}
								variants={{
									OVgPuO5XY: {
										"--extracted-r6o4lv":
											"var(--token-518f5c43-2a7d-48f3-9a8f-3d4fa14a1ea5, rgb(1, 1, 1))",
									},
								}}
								verticalAlignment={"top"}
								withExternalLayout={true}
								{...addPropertyOverrides(
									{
										iGf3xscni: {
											children: (
												<React.Fragment>
													<motion.p
														style={{
															"--font-selector": "RlM7UG9wcGlucy1tZWRpdW0=",
															"--framer-font-family":
																'"Poppins", "Poppins Placeholder", sans-serif',
															"--framer-font-size": "20px",
															"--framer-font-weight": "500",
															"--framer-line-height": "1.4em",
															"--framer-text-color":
																"var(--extracted-r6o4lv, var(--token-f087042b-d073-4748-a812-d40ebb0748d1, rgb(255, 255, 255)))",
														}}
													>
														{"button"}
													</motion.p>
												</React.Fragment>
											),
										},
										OVgPuO5XY: {
											children: (
												<React.Fragment>
													<motion.p
														style={{
															"--font-selector": "RlM7UG9wcGlucy1tZWRpdW0=",
															"--framer-font-family":
																'"Poppins", "Poppins Placeholder", sans-serif',
															"--framer-font-weight": "500",
															"--framer-line-height": "1.4em",
															"--framer-text-color":
																"var(--extracted-r6o4lv, var(--token-518f5c43-2a7d-48f3-9a8f-3d4fa14a1ea5, rgb(1, 1, 1)))",
														}}
													>
														{"button"}
													</motion.p>
												</React.Fragment>
											),
										},
										XvgVdrDw_: {
											children: (
												<React.Fragment>
													<motion.p
														style={{
															"--font-selector": "RlM7UG9wcGlucy1tZWRpdW0=",
															"--framer-font-family":
																'"Poppins", "Poppins Placeholder", sans-serif',
															"--framer-font-size": "20px",
															"--framer-font-weight": "500",
															"--framer-line-height": "1.4em",
															"--framer-text-color":
																"var(--extracted-r6o4lv, var(--token-f087042b-d073-4748-a812-d40ebb0748d1, rgb(255, 255, 255)))",
														}}
													>
														{"button"}
													</motion.p>
												</React.Fragment>
											),
										},
									},
									baseVariant,
									gestureVariant,
								)}
							>
								<React.Fragment>
									<motion.p
										style={{
											"--font-selector": "RlM7UG9wcGlucy1tZWRpdW0=",
											"--framer-font-family":
												'"Poppins", "Poppins Placeholder", sans-serif',
											"--framer-font-weight": "500",
											"--framer-line-height": "1.4em",
											"--framer-text-color":
												"var(--extracted-r6o4lv, var(--token-f087042b-d073-4748-a812-d40ebb0748d1, rgb(255, 255, 255)))",
										}}
									>
										{"button"}
									</motion.p>
								</React.Fragment>
							</RichText>
							{isDisplayed() && (
								<motion.div
									className={"framer-fsyf49"}
									data-framer-name={"Icon Flip"}
									layoutDependency={layoutDependency}
									layoutId={"QmbUEkaVU"}
								>
									<ComponentViewportProvider>
										<SmartComponentScopedContainer
											className={"framer-1ie4hc4-container"}
											isAuthoredByUser={true}
											isModuleExternal={true}
											layoutDependency={layoutDependency}
											layoutId={"TmDd1D6mc-container"}
											nodeId={"TmDd1D6mc"}
											rendersWithMotion={true}
											scopeId={"lXVHp5pp8"}
										>
											<Icon
												color={
													"var(--token-64f5bd03-6b7a-43e3-ba7b-3a0b2b8b7a5e, rgb(242, 249, 254))"
												}
												height={"100%"}
												iconSearch={"Home"}
												iconSelection={"arrow-up-right"}
												id={"TmDd1D6mc"}
												layoutId={"TmDd1D6mc"}
												mirrored={false}
												selectByList={true}
												style={{
													height: "100%",
													width: "100%",
												}}
												width={"100%"}
												{...addPropertyOverrides(
													{
														OVgPuO5XY: {
															color:
																"var(--token-518f5c43-2a7d-48f3-9a8f-3d4fa14a1ea5, rgb(1, 1, 1))",
														},
													},
													baseVariant,
													gestureVariant,
												)}
											/>
										</SmartComponentScopedContainer>
									</ComponentViewportProvider>
									<ComponentViewportProvider>
										<SmartComponentScopedContainer
											className={"framer-zv92fx-container"}
											isAuthoredByUser={true}
											isModuleExternal={true}
											layoutDependency={layoutDependency}
											layoutId={"xs6DcpqVB-container"}
											nodeId={"xs6DcpqVB"}
											rendersWithMotion={true}
											scopeId={"lXVHp5pp8"}
										>
											<Icon
												color={
													"var(--token-64f5bd03-6b7a-43e3-ba7b-3a0b2b8b7a5e, rgb(242, 249, 254))"
												}
												height={"100%"}
												iconSearch={"Home"}
												iconSelection={"arrow-up-right"}
												id={"xs6DcpqVB"}
												layoutId={"xs6DcpqVB"}
												mirrored={false}
												selectByList={true}
												style={{
													height: "100%",
													width: "100%",
												}}
												width={"100%"}
												{...addPropertyOverrides(
													{
														"OVgPuO5XY-hover": {
															color:
																"var(--token-dac0bec6-6acb-444c-ac02-87950f2b7f18, rgb(26, 24, 34))",
														},
													},
													baseVariant,
													gestureVariant,
												)}
											/>
										</SmartComponentScopedContainer>
									</ComponentViewportProvider>
								</motion.div>
							)}
						</motion.a>
					</Link>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-LQx4F.framer-1j9swxg, .framer-LQx4F .framer-1j9swxg { display: block; }",
	".framer-LQx4F.framer-cq2f4d { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: center; overflow: hidden; padding: 14px 32px 14px 32px; position: relative; text-decoration: none; width: min-content; will-change: var(--framer-will-change-override, transform); }",
	".framer-LQx4F .framer-nvgmjc { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	".framer-LQx4F .framer-fsyf49 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 20px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 20px; }",
	".framer-LQx4F .framer-1ie4hc4-container { flex: none; height: 18px; position: absolute; right: 0px; top: 0px; width: 18px; }",
	".framer-LQx4F .framer-zv92fx-container { bottom: -20px; flex: none; height: 18px; left: -20px; position: absolute; width: 18px; }",
	".framer-LQx4F.framer-v-123r710.framer-cq2f4d { overflow: visible; will-change: unset; }",
	".framer-LQx4F.framer-v-123r710 .framer-1ie4hc4-container, .framer-LQx4F.framer-v-2123ru .framer-1ie4hc4-container { right: 1px; top: 1px; }",
	".framer-LQx4F.framer-v-1fn8aeb.framer-cq2f4d { padding: var(--ouukmc); }",
	".framer-LQx4F.framer-v-123r710.hover.framer-cq2f4d { will-change: unset; }",
	".framer-LQx4F.framer-v-123r710.hover .framer-1ie4hc4-container, .framer-LQx4F.framer-v-2123ru.hover .framer-1ie4hc4-container { right: -20px; top: -20px; }",
	".framer-LQx4F.framer-v-123r710.hover .framer-zv92fx-container, .framer-LQx4F.framer-v-2123ru.hover .framer-zv92fx-container { bottom: 1px; left: 1px; }",
];
var FramerlXVHp5pp8 = withCSS(Component, css, "framer-LQx4F");
var stdin_default = FramerlXVHp5pp8;
FramerlXVHp5pp8.displayName = "Button/General";
FramerlXVHp5pp8.defaultProps = {
	height: 50,
	width: 118,
};
addPropertyControls(FramerlXVHp5pp8, {
	variant: {
		options: [
			"mEupMeY4u",
			"OVgPuO5XY",
			"eHqoyvrbU",
			"jWZK7WjcD",
			"IQofJ85ap",
			"iGf3xscni",
			"XvgVdrDw_",
		],
		optionTitles: [
			"Primary",
			"Secondary",
			"Primary Outline Icon",
			"Primary Outline",
			"Secondary Icon",
			"20px",
			"20px dark",
		],
		title: "Variant",
		type: ControlType.Enum,
	},
	gCmmKaF_0: {
		defaultValue: "button",
		displayTextArea: false,
		title: "Button Label",
		type: ControlType.String,
	},
	c3NOAKqXS: {
		title: "Link",
		type: ControlType.Link,
	},
	SOlgGv_mR: {
		defaultValue: "14px 32px 14px 32px",
		title: "Padding",
		type: ControlType.Padding,
	},
	mfMdui7qz: {
		title: "Click",
		type: ControlType.EventHandler,
	},
});
addFonts(
	FramerlXVHp5pp8,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Poppins",
					source: "fontshare",
					style: "normal",
					url: "https://framerusercontent.com/third-party-assets/fontshare/wf/K4RHKGAGLQZBXEZQT2O2AGSLKJF2E4YC/JRUTXNFPWLFGIEVSSEYOW7EP7TYM3V6A/UCDYLFFGLZRGCFY5GYDYM5LDB52BAR5M.woff2",
					weight: "500",
				},
			],
		},
		...FeatherFonts,
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:button/general
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "IQofJ85ap",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"bee694db1d314f12b6cdffa60a360ffca3c14f0f2418539a656750f9a51be314"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders GeneralFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"bee694db1d314f12b6cdffa60a360ffca3c14f0f2418539a656750f9a51be314"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var general_default = ComponentWithRoot;
export { general_default as default };
