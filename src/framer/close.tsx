// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project bee694db1d314f12 "Innermost AI (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
}} Props

 */
import { FramerIcons } from "./chunks/chunk-VRPEN3BZ.js";
import { routes } from "./chunks/chunk-VAWW4KIH.js";

// virtual:close
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framer.com/m/Close-Fg0X.js
import { jsx as _jsx } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ComponentViewportProvider,
	ControlType,
	cx,
	getFonts,
	SmartComponentScopedContainer,
	useActiveVariantCallback,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var FramerIconsFonts = getFonts(FramerIcons);
var enabledGestures = {
	Oiul3IsAf: {
		hover: true,
	},
};
var serializationHash = "framer-N12mK";
var variantClassNames = {
	Oiul3IsAf: "framer-v-170nrp1",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var getProps = ({ click, height, id, width, ...props }) => {
	return {
		...props,
		ST1HesUou: click ?? props.ST1HesUou,
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const { style, className, layoutId, variant, ST1HesUou, ...restProps } =
		getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		defaultVariant: "Oiul3IsAf",
		enabledGestures,
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const { activeVariantCallback, delay } =
		useActiveVariantCallback(baseVariant);
	const onTap1s9bse3 = activeVariantCallback(async (...args) => {
		setGestureState({
			isPressed: false,
		});
		if (ST1HesUou) {
			const res = await ST1HesUou(...args);
			if (res === false) return false;
		}
	});
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-170nrp1",
							className,
							classNames,
						)}
						data-framer-name={"Variant 1"}
						data-highlight={true}
						layoutDependency={layoutDependency}
						layoutId={"Oiul3IsAf"}
						onTap={onTap1s9bse3}
						ref={refBinding}
						style={{
							backgroundColor: "rgb(0, 0, 0)",
							borderBottomLeftRadius: 6,
							borderBottomRightRadius: 6,
							borderTopLeftRadius: 6,
							...style,
						}}
						variants={{
							"Oiul3IsAf-hover": {
								backgroundColor: "rgb(66, 66, 66)",
							},
						}}
						{...addPropertyOverrides(
							{
								"Oiul3IsAf-hover": {
									"data-framer-name": void 0,
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<ComponentViewportProvider>
							<SmartComponentScopedContainer
								className={"framer-nq23rd-container"}
								data-framer-name={"x"}
								isAuthoredByUser={true}
								isModuleExternal={true}
								layoutDependency={layoutDependency}
								layoutId={"EWt_2i2c8-container"}
								name={"x"}
								nodeId={"EWt_2i2c8"}
								rendersWithMotion={true}
								scopeId={"wFRI0wZS0"}
							>
								<FramerIcons
									color={
										"var(--token-f087042b-d073-4748-a812-d40ebb0748d1, rgb(255, 255, 255))"
									}
									height={"100%"}
									id={"EWt_2i2c8"}
									layoutId={"EWt_2i2c8"}
									name={"x"}
									strokeWidth={1.5}
									style={{
										height: "100%",
										width: "100%",
									}}
									svg={
										'<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" fill="#000000" class="bi bi-x" viewBox="0 0 16 16">\n  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>\n</svg>'
									}
									width={"100%"}
								/>
							</SmartComponentScopedContainer>
						</ComponentViewportProvider>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-N12mK.framer-sk4joe, .framer-N12mK .framer-sk4joe { display: block; }",
	".framer-N12mK.framer-170nrp1 { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 50px; justify-content: center; overflow: var(--overflow-clip-fallback, clip); padding: 0px; position: relative; width: 50px; will-change: var(--framer-will-change-override, transform); }",
	".framer-N12mK .framer-nq23rd-container { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 30px); position: relative; width: 30px; }",
];
var FramerwFRI0wZS0 = withCSS(Component, css, "framer-N12mK");
var stdin_default = FramerwFRI0wZS0;
FramerwFRI0wZS0.displayName = "Close";
FramerwFRI0wZS0.defaultProps = {
	height: 50,
	width: 50,
};
addPropertyControls(FramerwFRI0wZS0, {
	ST1HesUou: {
		title: "Click",
		type: ControlType.EventHandler,
	},
});
addFonts(
	FramerwFRI0wZS0,
	[
		{
			explicitInter: true,
			fonts: [],
		},
		...FramerIconsFonts,
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:close
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"bee694db1d314f12b6cdffa60a360ffca3c14f0f2418539a656750f9a51be314"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders CloseFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"bee694db1d314f12b6cdffa60a360ffca3c14f0f2418539a656750f9a51be314"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var close_default = ComponentWithRoot;
export { close_default as default };
