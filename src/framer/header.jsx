// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project bee694db1d314f12 "Innermost AI (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
}} Props

 */
import { stdin_default } from "./chunks/chunk-VTBEWI2D.js";
import "./chunks/chunk-TDPQQHTE.js";
import { routes } from "./chunks/chunk-VAWW4KIH.js";

// virtual:header
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framer.com/m/Header-ehSe.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ComponentViewportProvider,
	ControlType,
	cx,
	getFonts,
	getFontsFromSharedStyle,
	getLoadingLazyAtYPosition,
	Image,
	Link,
	RichText,
	SmartComponentScopedContainer,
	useActiveVariantCallback,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";

// /:https://framerusercontent.com/modules/b28AOAjNSatErrtmncae/cLPjfLWoW3IViHFdlFne/KvzgZ2ASo.js
import { fontStore } from "unframer";
fontStore.loadFonts([]);
var fonts = [
	{
		explicitInter: true,
		fonts: [],
	},
];
var css = [
	".framer-gQrcf .framer-styles-preset-fbrm0r:not(.rich-text-wrapper), .framer-gQrcf .framer-styles-preset-fbrm0r.rich-text-wrapper a { --framer-link-hover-text-color: var(--token-a046c569-860e-4698-b73a-6f4a544ad189, #f9781c); --framer-link-text-color: var(--token-b96ed00f-f1b0-47f1-85a2-09f5e52d4710, #242423); }",
];
var className = "framer-gQrcf";

// /:https://framer.com/m/Header-ehSe.js
var ButtonGeneralFonts = getFonts(stdin_default);
var cycleOrder = ["uUSzDgNBB", "NB6MALUSC", "qyX3DITjB", "zEKHg0aaB"];
var serializationHash = "framer-8zcL6";
var variantClassNames = {
	NB6MALUSC: "framer-v-1a3u6aw",
	qyX3DITjB: "framer-v-w8chju",
	uUSzDgNBB: "framer-v-1xf56ej",
	zEKHg0aaB: "framer-v-g7vdu2",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	damping: 40,
	delay: 0,
	mass: 1,
	stiffness: 400,
	type: "spring",
};
var transition2 = {
	damping: 50,
	delay: 0,
	mass: 1,
	stiffness: 350,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	"Phone Open": "zEKHg0aaB",
	Desktop: "uUSzDgNBB",
	Phone: "qyX3DITjB",
	Tablet: "NB6MALUSC",
};
var getProps = ({ height, id, width, ...props }) => {
	return {
		...props,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "uUSzDgNBB",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "uUSzDgNBB",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const { activeVariantCallback, delay } =
		useActiveVariantCallback(baseVariant);
	const onTap13uesx2 = activeVariantCallback(async (...args) => {
		setVariant("zEKHg0aaB");
	});
	const onTap162ldmu = activeVariantCallback(async (...args) => {
		setVariant("qyX3DITjB");
	});
	const sharedStyleClassNames = [className];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	const isDisplayed = () => {
		if (["qyX3DITjB", "zEKHg0aaB"].includes(baseVariant)) return true;
		return false;
	};
	const isDisplayed1 = () => {
		if (baseVariant === "qyX3DITjB") return false;
		return true;
	};
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition
					value={transition1}
					{...addPropertyOverrides(
						{
							qyX3DITjB: {
								value: transition2,
							},
							zEKHg0aaB: {
								value: transition2,
							},
						},
						baseVariant,
						gestureVariant,
					)}
				>
					<motion.header
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-1xf56ej",
							className2,
							classNames,
						)}
						data-border={true}
						data-framer-name={"Desktop"}
						layoutDependency={layoutDependency}
						layoutId={"uUSzDgNBB"}
						ref={refBinding}
						style={{
							"--border-bottom-width": "1px",
							"--border-color": "rgba(0, 0, 0, 0.12)",
							"--border-left-width": "0px",
							"--border-right-width": "0px",
							"--border-style": "solid",
							"--border-top-width": "0px",
							...style,
						}}
						{...addPropertyOverrides(
							{
								NB6MALUSC: {
									"data-framer-name": "Tablet",
								},
								qyX3DITjB: {
									"data-framer-name": "Phone",
								},
								zEKHg0aaB: {
									"data-framer-name": "Phone Open",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<motion.nav
							className={"framer-1ghxoo4"}
							data-framer-name={"Container"}
							layoutDependency={layoutDependency}
							layoutId={"Zv428NeOJ"}
						>
							<motion.div
								className={"framer-1hrmtdx"}
								data-framer-name={"Content"}
								layoutDependency={layoutDependency}
								layoutId={"rPHnjsRVV"}
							>
								<motion.div
									className={"framer-d2fhg8"}
									data-framer-name={"Top"}
									layoutDependency={layoutDependency}
									layoutId={"ULxMDoQF3"}
								>
									<Link
										href={{
											webPageId: "augiA20Il",
										}}
										motionChild={true}
										nodeId={"fAFuSgPr1"}
										scopeId={"knWRLshp3"}
									>
										<Image
											as={"a"}
											background={{
												alt: "",
												fit: "fit",
												loading: getLoadingLazyAtYPosition(
													(componentViewport?.y || 0) +
														20 +
														(((componentViewport?.height || 90) - 40 - 50) / 2 +
															0 +
															0) +
														0 +
														6 +
														0,
												),
												pixelHeight: 38,
												pixelWidth: 180,
												positionX: "center",
												positionY: "center",
												src: "https://framerusercontent.com/images/8PZ2hXzhoVvptR5ONWeDX2zuAO8.svg?width=180&height=38",
											}}
											className={"framer-1jteeuk framer-1h2q2zz"}
											data-framer-name={"Logo"}
											layoutDependency={layoutDependency}
											layoutId={"fAFuSgPr1"}
											{...addPropertyOverrides(
												{
													NB6MALUSC: {
														background: {
															alt: "",
															fit: "fit",
															loading: getLoadingLazyAtYPosition(
																(componentViewport?.y || 0) +
																	20 +
																	(((componentViewport?.height || 90) -
																		40 -
																		50) /
																		2 +
																		0 +
																		0) +
																	0 +
																	8.7153 +
																	0,
															),
															pixelHeight: 38,
															pixelWidth: 180,
															positionX: "center",
															positionY: "center",
															src: "https://framerusercontent.com/images/8PZ2hXzhoVvptR5ONWeDX2zuAO8.svg?width=180&height=38",
														},
													},
													qyX3DITjB: {
														background: {
															alt: "",
															fit: "fit",
															loading: getLoadingLazyAtYPosition(
																(componentViewport?.y || 0) +
																	14 +
																	(((componentViewport?.height || 72) -
																		28 -
																		44) /
																		2 +
																		0 +
																		0) +
																	0 +
																	0 +
																	0 +
																	8.632,
															),
															pixelHeight: 38,
															pixelWidth: 180,
															positionX: "center",
															positionY: "center",
															src: "https://framerusercontent.com/images/8PZ2hXzhoVvptR5ONWeDX2zuAO8.svg?width=180&height=38",
														},
													},
													zEKHg0aaB: {
														background: {
															alt: "",
															fit: "fit",
															loading: getLoadingLazyAtYPosition(
																(componentViewport?.y || 0) +
																	14 +
																	(((componentViewport?.height || 218) -
																		54 -
																		163.2) /
																		2 +
																		0 +
																		0) +
																	0 +
																	0 +
																	0 +
																	9,
															),
															pixelHeight: 38,
															pixelWidth: 180,
															positionX: "center",
															positionY: "center",
															src: "https://framerusercontent.com/images/8PZ2hXzhoVvptR5ONWeDX2zuAO8.svg?width=180&height=38",
														},
													},
												},
												baseVariant,
												gestureVariant,
											)}
										/>
									</Link>
									{isDisplayed() && (
										<motion.button
											className={"framer-1yzrpmk"}
											data-framer-name={"Icon"}
											data-reset={"button"}
											layoutDependency={layoutDependency}
											layoutId={"gK3OCGXJz"}
											{...addPropertyOverrides(
												{
													qyX3DITjB: {
														"data-highlight": true,
														onTap: onTap13uesx2,
													},
													zEKHg0aaB: {
														"data-highlight": true,
														onTap: onTap162ldmu,
													},
												},
												baseVariant,
												gestureVariant,
											)}
										>
											<motion.div
												className={"framer-91e99"}
												data-framer-name={"Bottom"}
												layoutDependency={layoutDependency}
												layoutId={"VJlOwXUU6"}
												style={{
													backgroundColor: "rgb(153, 153, 153)",
													borderBottomLeftRadius: 10,
													borderBottomRightRadius: 10,
													borderTopLeftRadius: 10,
													borderTopRightRadius: 10,
													rotate: 0,
												}}
												variants={{
													zEKHg0aaB: {
														rotate: -45,
													},
												}}
											/>
											<motion.div
												className={"framer-1toxq8s"}
												data-framer-name={"Top"}
												layoutDependency={layoutDependency}
												layoutId={"V3D1NcWz4"}
												style={{
													backgroundColor: "rgb(153, 153, 153)",
													borderBottomLeftRadius: 10,
													borderBottomRightRadius: 10,
													borderTopLeftRadius: 10,
													borderTopRightRadius: 10,
													rotate: 0,
												}}
												variants={{
													zEKHg0aaB: {
														rotate: 45,
													},
												}}
											/>
										</motion.button>
									)}
								</motion.div>
								{isDisplayed1() && (
									<motion.div
										className={"framer-flni5b"}
										data-framer-name={"CTA"}
										layoutDependency={layoutDependency}
										layoutId={"g2AiD_ies"}
									>
										<RichText
											__fromCanvasComponent={true}
											className={"framer-1ahqdy1"}
											fonts={["FS;Poppins-medium"]}
											layoutDependency={layoutDependency}
											layoutId={"fwmvmNXMp"}
											style={{
												"--extracted-r6o4lv":
													"var(--token-b96ed00f-f1b0-47f1-85a2-09f5e52d4710, rgb(36, 36, 35))",
											}}
											verticalAlignment={"top"}
											withExternalLayout={true}
										>
											<React.Fragment>
												<motion.p
													style={{
														"--font-selector": "RlM7UG9wcGlucy1tZWRpdW0=",
														"--framer-font-family":
															'"Poppins", "Poppins Placeholder", sans-serif',
														"--framer-font-weight": "500",
														"--framer-text-color":
															"var(--extracted-r6o4lv, var(--token-b96ed00f-f1b0-47f1-85a2-09f5e52d4710, rgb(36, 36, 35)))",
													}}
												>
													<Link
														href={"https://getinnermost.com/register"}
														motionChild={true}
														nodeId={"fwmvmNXMp"}
														openInNewTab={true}
														relValues={[]}
														scopeId={"knWRLshp3"}
														smoothScroll={false}
													>
														<motion.a
															className={"framer-styles-preset-fbrm0r"}
															data-styles-preset={"KvzgZ2ASo"}
														>
															{"Create account"}
														</motion.a>
													</Link>
												</motion.p>
											</React.Fragment>
										</RichText>
										<ComponentViewportProvider
											height={50}
											y={
												(componentViewport?.y || 0) +
												20 +
												(((componentViewport?.height || 90) - 40 - 50) / 2 +
													0 +
													0) +
												0 +
												0 +
												0
											}
											{...addPropertyOverrides(
												{
													zEKHg0aaB: {
														width: "340px",
														y:
															(componentViewport?.y || 0) +
															14 +
															(((componentViewport?.height || 218) -
																54 -
																163.2) /
																2 +
																0 +
																0) +
															0 +
															0 +
															84 +
															0 +
															29.2,
													},
												},
												baseVariant,
												gestureVariant,
											)}
										>
											<SmartComponentScopedContainer
												className={"framer-1c5lh1-container"}
												layoutDependency={layoutDependency}
												layoutId={"I3N8rAXJU-container"}
												nodeId={"I3N8rAXJU"}
												rendersWithMotion={true}
												scopeId={"knWRLshp3"}
											>
												{_jsx(stdin_default, {
													c3NOAKqXS: "https://getinnermost.com/login",
													gCmmKaF_0: "Login",
													height: "100%",
													id: "I3N8rAXJU",
													layoutId: "I3N8rAXJU",
													SOlgGv_mR: "14px 32px 14px 32px",
													variant: "mEupMeY4u",
													width: "100%",
													...addPropertyOverrides(
														{
															zEKHg0aaB: {
																style: {
																	width: "100%",
																},
															},
														},
														baseVariant,
														gestureVariant,
													),
												})}
											</SmartComponentScopedContainer>
										</ComponentViewportProvider>
									</motion.div>
								)}
							</motion.div>
						</motion.nav>
					</motion.header>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css2 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-8zcL6.framer-1h2q2zz, .framer-8zcL6 .framer-1h2q2zz { display: block; }",
	".framer-8zcL6.framer-1xf56ej { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 20px; height: 90px; justify-content: center; overflow: visible; padding: 20px 60px 20px 60px; position: relative; width: 1920px; }",
	".framer-8zcL6 .framer-1ghxoo4 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; max-width: 1280px; overflow: visible; padding: 0px; position: relative; width: 100%; z-index: 9; }",
	".framer-8zcL6 .framer-1hrmtdx { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; height: min-content; justify-content: space-between; overflow: visible; padding: 0px; position: relative; width: 100%; }",
	".framer-8zcL6 .framer-d2fhg8 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }",
	".framer-8zcL6 .framer-1jteeuk { aspect-ratio: 4.114285714285714 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 38px); overflow: hidden; position: relative; text-decoration: none; width: 160px; }",
	".framer-8zcL6 .framer-1yzrpmk { flex: none; height: 40px; overflow: hidden; position: relative; width: 40px; }",
	".framer-8zcL6 .framer-91e99 { flex: none; height: 2px; left: calc(50.00000000000002% - 20px / 2); overflow: hidden; position: absolute; top: calc(62.50000000000002% - 2px / 2); width: 20px; will-change: var(--framer-will-change-override, transform); }",
	".framer-8zcL6 .framer-1toxq8s { flex: none; height: 2px; left: calc(50.00000000000002% - 20px / 2); overflow: hidden; position: absolute; top: calc(37.50000000000002% - 2px / 2); width: 20px; will-change: var(--framer-will-change-override, transform); }",
	".framer-8zcL6 .framer-flni5b { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }",
	".framer-8zcL6 .framer-1ahqdy1 { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	".framer-8zcL6 .framer-1c5lh1-container { flex: none; height: auto; position: relative; width: auto; }",
	// ".framer-8zcL6.framer-v-1a3u6aw.framer-1xf56ej { height: min-content; padding: 20px 30px 20px 30px; width: 810px; }",
	".framer-8zcL6.framer-v-1a3u6aw.framer-1xf56ej { height: min-content; padding: 20px 30px 20px 30px; width: 100%; }",
	".framer-8zcL6.framer-v-1a3u6aw .framer-1hrmtdx { flex: 1 0 0px; width: 1px; }",
	".framer-8zcL6.framer-v-1a3u6aw .framer-1jteeuk { height: var(--framer-aspect-ratio-supported, 32px); width: 134px; }",
	".framer-8zcL6.framer-v-w8chju.framer-1xf56ej { height: min-content; padding: 14px 25px 14px 25px; width: 390px; }",
	".framer-8zcL6.framer-v-w8chju .framer-1ghxoo4 { z-index: unset; }",
	".framer-8zcL6.framer-v-w8chju .framer-1hrmtdx { flex-direction: column; }",
	".framer-8zcL6.framer-v-w8chju .framer-d2fhg8, .framer-8zcL6.framer-v-g7vdu2 .framer-d2fhg8 { gap: unset; justify-content: space-between; width: 100%; }",
	".framer-8zcL6.framer-v-w8chju .framer-1jteeuk { height: var(--framer-aspect-ratio-supported, 26px); width: 110px; }",
	".framer-8zcL6.framer-v-w8chju .framer-1yzrpmk, .framer-8zcL6.framer-v-g7vdu2 .framer-1yzrpmk { cursor: pointer; height: 44px; width: 44px; }",
	".framer-8zcL6.framer-v-g7vdu2.framer-1xf56ej { align-content: flex-start; align-items: flex-start; height: min-content; max-height: calc(var(--framer-viewport-height, 100vh) * 1); padding: 14px 25px 40px 25px; width: 390px; }",
	".framer-8zcL6.framer-v-g7vdu2 .framer-1hrmtdx { flex-direction: column; gap: 40px; justify-content: flex-start; }",
	".framer-8zcL6.framer-v-g7vdu2 .framer-1jteeuk { aspect-ratio: 4.230769230769231 / 1; height: var(--framer-aspect-ratio-supported, 26px); width: 110px; }",
	".framer-8zcL6.framer-v-g7vdu2 .framer-91e99, .framer-8zcL6.framer-v-g7vdu2 .framer-1toxq8s { top: calc(50.00000000000002% - 2px / 2); }",
	".framer-8zcL6.framer-v-g7vdu2 .framer-flni5b { flex-direction: column; width: 340px; }",
	".framer-8zcL6.framer-v-g7vdu2 .framer-1c5lh1-container { width: 100%; }",
	...css,
	'.framer-8zcL6[data-border="true"]::after, .framer-8zcL6 [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
var FramerknWRLshp3 = withCSS(Component, css2, "framer-8zcL6");
var stdin_default2 = FramerknWRLshp3;
FramerknWRLshp3.displayName = "Header";
FramerknWRLshp3.defaultProps = {
	height: 90,
	width: 1920,
};
addPropertyControls(FramerknWRLshp3, {
	variant: {
		options: ["uUSzDgNBB", "NB6MALUSC", "qyX3DITjB", "zEKHg0aaB"],
		optionTitles: ["Desktop", "Tablet", "Phone", "Phone Open"],
		title: "Variant",
		type: ControlType.Enum,
	},
});
addFonts(
	FramerknWRLshp3,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Poppins",
					source: "fontshare",
					style: "normal",
					url: "https://framerusercontent.com/third-party-assets/fontshare/wf/K4RHKGAGLQZBXEZQT2O2AGSLKJF2E4YC/JRUTXNFPWLFGIEVSSEYOW7EP7TYM3V6A/UCDYLFFGLZRGCFY5GYDYM5LDB52BAR5M.woff2",
					weight: "500",
				},
			],
		},
		...ButtonGeneralFonts,
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:header
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "qyX3DITjB",
	md: "NB6MALUSC",
	"2xl": "uUSzDgNBB",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"bee694db1d314f12b6cdffa60a360ffca3c14f0f2418539a656750f9a51be314"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default2, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders HeaderFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"bee694db1d314f12b6cdffa60a360ffca3c14f0f2418539a656750f9a51be314"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default2}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default2);
var header_default = ComponentWithRoot;
export { header_default as default };
